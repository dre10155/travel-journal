{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"h1\", null, \"Board\");\n}","map":{"version":3,"mappings":";;uBACEA,oBAAc,IAAd,EAAc,IAAd,EAAI,OAAJ","names":["_createElementBlock"],"sourceRoot":"","sources":["/Users/andreasmendes/Documents/vue-tic-tac-toe/src/components/Board.vue"],"sourcesContent":["<template>\n  <h1>Board</h1>\n</template>\n\n<script>\nimport {ref, computed } from 'vue'\n\nconst calculateWinner = squares =>{\n    const lines = [\n        [0,1,2],\n        [3,4,5],\n        [6,7,8],\n        [0,3,6],\n        [1,4,7],\n        [2,5,8],\n        [0,4,8],\n        [2,4,6]\n    ]\n    for (let i = 0; i<lines.length; i++){\n        const [a,b,c] = lines[i]\n        if (squares[a] && squares[a] === squares[b] && squares[a] === sqaures[c]){\n            return squares[a]\n        }\n    }\n    return null  \n\n}\nexport default {\n    setup(){\n        // Verify who's turn it is \n        const player = ref('X')\n        const squares = ref([\n            ['','',''],\n            ['','',''],\n            ['','','']\n        ])\n        const winner = computed(() => calculateWinner(squares.value.flat()))\n        const move = (x, y) => {\n            if (winner.value) return \n            squares.value[x][y] = player.value\n        }\n        return{\n            player,\n            squares,\n            winner\n        }\n    }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}