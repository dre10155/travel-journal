{"ast":null,"code":"import { ref, computed } from 'vue';\n\nconst calculateWinner = squares => {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === sqaures[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n};\n\nexport default {\n  setup() {\n    // Verify who's turn it is \n    const player = ref('X');\n    const squares = ref([['', '', ''], ['', '', ''], ['', '', '']]);\n    const winner = computed(() => calculateWinner(squares.value.flat()));\n    return {\n      player,\n      squares,\n      winner\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAKA,SAAQA,GAAR,EAAaC,QAAb,QAA6B,KAA7B;;AAEA,MAAMC,eAAc,GAAIC,OAAM,IAAI;AAC9B,QAAMC,KAAI,GAAI,CACV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CADU,EAEV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAFU,EAGV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAHU,EAIV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAJU,EAKV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CALU,EAMV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CANU,EAOV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAPU,EAQV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CARU,CAAd;;AAUA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,CAAC,GAACD,KAAK,CAACE,MAAxB,EAAgCD,CAAC,EAAjC,EAAoC;AAChC,UAAM,CAACE,CAAD,EAAGC,CAAH,EAAKC,CAAL,IAAUL,KAAK,CAACC,CAAD,CAArB;;AACA,QAAIF,OAAO,CAACI,CAAD,CAAP,IAAcJ,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACK,CAAD,CAApC,IAA2CL,OAAO,CAACI,CAAD,CAAP,KAAeG,OAAO,CAACD,CAAD,CAArE,EAAyE;AACrE,aAAON,OAAO,CAACI,CAAD,CAAd;AACJ;AACJ;;AACA,SAAO,IAAP;AAEJ,CAnBA;;AAoBA,eAAe;AACXI,OAAK,GAAE;AACH;AACA,UAAMC,MAAK,GAAIZ,GAAG,CAAC,GAAD,CAAlB;AACA,UAAMG,OAAM,GAAIH,GAAG,CAAC,CAChB,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CADgB,EAEhB,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CAFgB,EAGhB,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CAHgB,CAAD,CAAnB;AAKA,UAAMa,MAAK,GAAIZ,QAAQ,CAAC,MAAMC,eAAe,CAACC,OAAO,CAACW,KAAR,CAAcC,IAAd,EAAD,CAAtB,CAAvB;AACA,WAAM;AACFH,YADE;AAEFT,aAFE;AAGFU;AAHE,KAAN;AAKJ;;AAfW,CAAf","names":["ref","computed","calculateWinner","squares","lines","i","length","a","b","c","sqaures","setup","player","winner","value","flat"],"sourceRoot":"","sources":["/Users/andreasmendes/Documents/vue-tic-tac-toe/src/components/Board.vue"],"sourcesContent":["<template>\n  <h1>Board</h1>\n</template>\n\n<script>\nimport {ref, computed } from 'vue'\n\nconst calculateWinner = squares =>{\n    const lines = [\n        [0,1,2],\n        [3,4,5],\n        [6,7,8],\n        [0,3,6],\n        [1,4,7],\n        [2,5,8],\n        [0,4,8],\n        [2,4,6]\n    ]\n    for (let i = 0; i<lines.length; i++){\n        const [a,b,c] = lines[i]\n        if (squares[a] && squares[a] === squares[b] && squares[a] === sqaures[c]){\n            return squares[a]\n        }\n    }\n    return null  \n\n}\nexport default {\n    setup(){\n        // Verify who's turn it is \n        const player = ref('X')\n        const squares = ref([\n            ['','',''],\n            ['','',''],\n            ['','','']\n        ])\n        const winner = computed(() => calculateWinner(squares.value.flat()))\n        return{\n            player,\n            squares,\n            winner\n        }\n    }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}